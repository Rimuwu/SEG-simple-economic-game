from oms import Page
from aiogram.types import CallbackQuery
from modules.ws_client import get_company
from oms.utils import callback_generator
from global_modules.logs import Logger

bot_logger = Logger.get_logger("bot")


class PrisonPage(Page):
    __page_name__ = "prison-page"
    
    async def content_worker(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–ª—é—á–µ–Ω–∏–∏ –∫–æ–º–ø–∞–Ω–∏–∏"""
        scene_data = self.scene.get_data('scene')
        company_id = scene_data.get('company_id')
        
        if not company_id:
            return "‚ùå –û—à–∏–±–∫–∞: –∫–æ–º–ø–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏
            company_data = await get_company(id=company_id)
            bot_logger.info(f"get_company response for prison: {company_data}")
            
            if isinstance(company_data, str):
                return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {company_data}"
            
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏
            balance = company_data.get('balance', 0)
            company_name = company_data.get('name', '–ö–æ–º–ø–∞–Ω–∏—è')
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
            content = "üîí **–¢–Æ–†–¨–ú–ê**\n\n"
            content += f"–ö–æ–º–ø–∞–Ω–∏—è: *{company_name}*\n\n"
            
            content += "‚ùå –í–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç—é—Ä—å–º–µ!\n\n"
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏
            content += f"üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {balance:,} üí∞\n\n".replace(",", " ")
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ä–æ–∫–µ –∑–∞–∫–ª—é—á–µ–Ω–∏—è
            # –í –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ–±—ã—á–Ω–æ –µ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä prison_duration
            # –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ —ç—Ç–æ 3 —Ö–æ–¥–∞ (–º–æ–∂–Ω–æ –±—É–¥–µ—Ç —É—Ç–æ—á–Ω–∏—Ç—å –∏–∑ settings)
            from global_modules.load_config import ALL_CONFIGS
            settings = ALL_CONFIGS.get('settings')
            
            # –ü—Ä–∏–º–µ—Ä–Ω—ã–π —Å—Ä–æ–∫ - 3 —Ö–æ–¥–∞ (–µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ –∏–Ω–∞—á–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö)
            prison_duration = 3
            if settings:
                # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—é—Ä—å–º—ã –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
                prison_duration = getattr(settings, 'prison_duration', 3)
            
            content += f"‚õì **–°—Ä–æ–∫ –∑–∞–∫–ª—é—á–µ–Ω–∏—è:** {prison_duration} —Ö–æ–¥(–æ–≤)\n\n"
            
            content += "üìã **–ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –∑–∞–∫–ª—é—á–µ–Ω–∏—è:**\n"
            content += "‚Ä¢ –ö–æ–º–ø–∞–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å —Ä–µ—Å—É—Ä—Å—ã\n"
            content += "‚Ä¢ –ó–∞–≤–æ–¥—ã –ø—Ä–æ—Å—Ç–∞–∏–≤–∞—é—Ç\n"
            content += "‚Ä¢ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ–≤–µ—Ä—à–∞—Ç—å —Å–¥–µ–ª–∫–∏\n"
            content += "‚Ä¢ –ù–∞–ª–æ–≥–∏ –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç –Ω–∞—á–∏—Å–ª—è—Ç—å—Å—è\n\n"
            
            content += "üí° **–ö–∞–∫ –∏–∑–±–µ–∂–∞—Ç—å —Ç—é—Ä—å–º—ã –≤ –±—É–¥—É—â–µ–º:**\n"
            content += "‚Ä¢ –í–æ–≤—Ä–µ–º—è –æ–ø–ª–∞—á–∏–≤–∞–π—Ç–µ –Ω–∞–ª–æ–≥–∏\n"
            content += "‚Ä¢ –°–ª–µ–¥–∏—Ç–µ –∑–∞ –±–∞–ª–∞–Ω—Å–æ–º –∫–æ–º–ø–∞–Ω–∏–∏\n"
            content += "‚Ä¢ –ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ —Ä–∞—Å—Ö–æ–¥—ã –∑–∞—Ä–∞–Ω–µ–µ\n\n"
            
            content += f"‚è≥ –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ —á–µ—Ä–µ–∑: *{prison_duration}* —Ö–æ–¥(–æ–≤)"
            
            return content
            
        except Exception as e:
            bot_logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç—é—Ä—å–º–µ: {e}")
            return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {str(e)}"
    
    async def buttons_worker(self):
        """–ö–Ω–æ–ø–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ç—é—Ä—å–º—ã"""
        buttons = [
            {
                'text': 'üìä –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é',
                'callback_data': callback_generator(
                    self.scene.__scene_name__,
                    'refresh'
                )
            },
            {
                'text': '‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é',
                'callback_data': callback_generator(
                    self.scene.__scene_name__,
                    'back'
                )
            }
        ]
        
        self.row_width = 1
        return buttons
    
    @Page.on_callback('refresh')
    async def refresh_info(self, callback: CallbackQuery, args: list):
        """–û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ"""
        await self.scene.update_message()
        await callback.answer("üîÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
    
    @Page.on_callback('back')
    async def back_to_menu(self, callback: CallbackQuery, args: list):
        """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        await self.scene.update_page('main-page')
        await callback.answer()
