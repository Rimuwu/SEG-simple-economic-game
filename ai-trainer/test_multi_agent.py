#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–Ω–æ–≥–æ–∞–≥–µ–Ω—Ç–Ω–æ–≥–æ —Ç—Ä–µ–Ω–µ—Ä–∞
"""
import os
os.environ['TF_ENABLE_ONEDNN_OPTS'] = '0'

import asyncio
import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent))

from main import AITrainerApp


async def test_multi_agent_training():
    """–¢–µ—Å—Ç –æ–±—É—á–µ–Ω–∏—è —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∞–≥–µ–Ω—Ç–∞–º–∏"""
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        app = AITrainerApp("config.json")
        
        print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ\n")
        
        # –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ —Å 2 –∞–≥–µ–Ω—Ç–∞–º–∏ (–æ—Å–Ω–æ–≤–Ω–æ–π + 1 –æ–ø–ø–æ–Ω–µ–Ω—Ç)
        print("ü§ñ –ù–∞—á–∞–ª–æ –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ —Å 2 –∞–≥–µ–Ω—Ç–∞–º–∏...")
        result = await app.train_model(
            name="test_multi_agent",
            difficulty="easy",
            episodes=2,  # –¢–æ–ª—å–∫–æ 2 —ç–ø–∏–∑–æ–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∞
            description="–¢–µ—Å—Ç –º–Ω–æ–≥–æ–∞–≥–µ–Ω—Ç–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è",
            num_agents=2
        )
        
        if result["success"]:
            print(f"\n‚úÖ –û–±—É—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
            print(f"  üì¶ –ú–æ–¥–µ–ª—å: {result['model_name']} v{result['model_version']}")
            print(f"  üìä –≠–ø–∏–∑–æ–¥–æ–≤: {result['episodes_trained']}")
            print(f"  üèÜ –°—Ä–µ–¥–Ω—è—è –Ω–∞–≥—Ä–∞–¥–∞: {result['average_reward']:.2f}")
            print(f"  ü•á –õ—É—á—à–∞—è –Ω–∞–≥—Ä–∞–¥–∞: {result['best_reward']:.2f}")
        else:
            print(f"\n‚ùå –û—à–∏–±–∫–∞ –æ–±—É—á–µ–Ω–∏—è: {result.get('error')}")
            
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(test_multi_agent_training())
